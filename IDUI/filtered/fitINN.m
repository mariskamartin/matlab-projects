% Solve an Input-Output Fitting problem with a Neural Network
% Script generated by NFTOOL
% Created Tue May 14 13:20:40 CEST 2013
%
% This script assumes these variables are defined:
%
%   inputs - input data.
%   targets - target data.

% Create a Fitting Network
if (exist('topology','var'))
    hiddenLayerSize = topology;
else
    hiddenLayerSize = 15;
end
clear net;
net = fitnet(hiddenLayerSize);


% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 80/100;
net.divideParam.valRatio = 10/100;
net.divideParam.testRatio = 10/100;

net.trainParam.max_fail = 100;
% net.trainParam.showWindow = false;

% Train the Network
[net,tr] = train(net,inputs,targets);

% Test the Network
outputs = net(inputs);
errors = gsubtract(targets,outputs);
performance = perform(net,targets,outputs)

% View the Network
%view(net)

% Plots
% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
% figure, plotfit(net,inputs,targets)
figure, plotregression(targets,outputs)
figure, ploterrhist(errors)
